{"version":3,"sources":["components/micro-components/TotalButton.js","components/micro-components/Navbar.js","components/childrenComponents/CardLink.js","components/micro-components/SearchBar.js","components/Home.js","components/DetailView.js","components/Error404.js","components/Routes.js","reportWebVitals.js","index.js"],"names":["button","backgroundColor","color","padding","marginLeft","marginRight","marginBottom","textDecoration","borderRadius","fontFamily","PrevButton","currentAnimeShows","style","to","parseInt","NextButton","BackButton","DIV_NAVBAR","styled","header","SPAN_LOGO","span","logoLink","fontSize","Navbar","CardLink","children","animeShowId","DIV_SEARCH_CONTAINER","div","INPUT_SEARCH","input","DIV_SEARCH_LIST","DIV_LIST","DIV_SEARCH_LIST_CONTAINER","SearchBar","useState","searchAnime","setSearchAnime","posibleAnimes","setPosibleAnimes","url","useParams","searchListState","setSearchListState","useEffect","a","fetch","res","json","data","console","log","handleSearch","table","onClick","type","placeholder","onChange","e","target","value","handleInputChange","length","map","anime","animeShow","hasId","id","hasTitle","attributes","canonicalTitle","DIV_CARD_CONTAINER","DIV_CARD","P_TITLE","p","IMG_PORTRAIT","img","DIV_PAGINATION_BAR","DIV_BUTTON_CONTAINER","DIV_IMG_CONTAINER","Home","animeData","setAnimeData","startAnimeShow","fetchingAnimeData","hasImgTiny","posterImage","tiny","src","alt","DIV_MAIN_CONTAINER","DIV_PRESENTATION_CARD","DIV_SYNOPSIS_CONTAINER","PRE_SYNOPSIS","pre","P_TITLE_SYNOPSIS","P_INFO","P_PRESENTATION_TITLE","DIV_BACK_BUTTON_HOLDER","IMG","DetailView","detailData","setDetailData","hasImgSmall","hasSynopsis","hasStartDate","hasFinished","hasEpisodeCount","hasStatus","hasEpisodeLength","hasNsfwContent","hasPopularityRank","setAnimeShow","animeUrl","small","description","startDate","endDate","episodeCount","status","episodeLength","nsfw","popularityRank","HandleViewData","hasImg","DIV_ERROR_CONTAINER","H1_ERROR_TITLE","h1","Error404","Routes","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85e25db4.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"    \r\n\r\nconst button = {\r\n    backgroundColor: \"red\",\r\n    color: \"#fff\",\r\n    padding: \"5px 25px\",\r\n    marginLeft: \"5px\",\r\n    marginRight: \"5px\",\r\n    marginBottom: \"1.5rem\",\r\n    textDecoration: \"none\",\r\n    borderRadius: \"3px\",\r\n    fontFamily: \"'Manrope', 'sans-serif'\"\r\n}\r\n\r\nexport const PrevButton = ({currentAnimeShows=0}) => <Link style={button} to={`/AnimeInfo/${parseInt(currentAnimeShows)-12}`}>Previous</Link>;\r\n\r\nexport const NextButton = ({currentAnimeShows=0}) => <Link style={button} to={`/AnimeInfo/${parseInt(currentAnimeShows)+12}`}>Next</Link>;\r\n\r\nexport const BackButton = ({currentAnimeShows=0}) => <Link style={button} to={`/AnimeInfo/${currentAnimeShows}`}>Go back</Link>;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst DIV_NAVBAR = styled.header`\r\n    background-color: #000000;\r\n    text-align: center;\r\n`;\r\nconst SPAN_LOGO = styled.span`\r\n    color: #798f8c;\r\n`;\r\nconst logoLink = {\r\n    fontSize: \"40px\",\r\n    textDecoration: \"none\",\r\n    color: \"#d9ebe9\",\r\n    fontFamily: \"'Pacifico', 'cursive'\"\r\n}\r\n\r\nconst Navbar = () => {\r\n    \r\n    return (\r\n        <DIV_NAVBAR>\r\n            <Link to=\"/AnimeInfo/\" style={logoLink}>Anime<SPAN_LOGO>Info</SPAN_LOGO></Link>\r\n        </DIV_NAVBAR>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CardLink = ({children, currentAnimeShows=0, animeShowId}) => {\r\n    const animeShowLink = {textDecoration: \"none\"};\r\n\r\n    return ( \r\n        <Link style={animeShowLink} to={`/AnimeInfo/${currentAnimeShows}/details/${ animeShowId }`}>\r\n            {children}\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default CardLink;","import styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CardLink from \"../childrenComponents/CardLink\";\r\n\r\nconst DIV_SEARCH_CONTAINER = styled.div`\r\n    display: flex;\r\n    // background-color: purple;    \r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 5em;\r\n    margin-bottom: 0.8rem;\r\n`;\r\nconst INPUT_SEARCH = styled.input`\r\n    width: 350px;\r\n    height: 1.5em;\r\n    margin-top: 2rem;\r\n    font-family: 'Manrope', sans-serif;\r\n    @media (max-width: 552px) {\r\n        width: 300px;\r\n    }\r\n    @media (max-width: 300px) {\r\n        width: 200px;\r\n    }\r\n`;\r\nconst DIV_SEARCH_LIST = styled.div`\r\n    background-color: #fff;\r\n    margin: 0 auto;\r\n    justify-content: center;\r\n    width: 358px;\r\n    @media (max-width: 552px) {\r\n        width: 300px;\r\n    }\r\n    @media (max-width: 300px) {\r\n        width: 200px;\r\n    }\r\n`;\r\nconst DIV_LIST = styled.div`\r\n    color: #000;\r\n    list-style: none;\r\n    height: 3.2rem;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    font-family: 'Manrope', sans-serif;\r\n    border-bottom: 1px solid #0e1821;\r\n\r\n    &:hover {\r\n        background-color: red;\r\n    }\r\n`;\r\nconst DIV_SEARCH_LIST_CONTAINER = styled.div`\r\n    width: 100%;\r\n    //background-color: violet;\r\n    min-height: 100vh;\r\n    position: absolute;\r\n    margin-top: -1rem;\r\n`;\r\n\r\nconst SearchBar = () => {\r\n    const [searchAnime, setSearchAnime] = useState('');\r\n    //data cruda\r\n    const [posibleAnimes, setPosibleAnimes] = useState([]);\r\n    const url = `https://kitsu.io/api/edge/anime?filter[text]=${searchAnime}`;\r\n    //objeto con data de las series\r\n    const {currentAnimeShows} = useParams();\r\n    //estatus de la lista de resultados\r\n    const [searchListState, setSearchListState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const handleSearch = async (url) => {\r\n            try {\r\n                const res = await fetch(url);\r\n                const {data} = await res.json();\r\n                setPosibleAnimes(data)\r\n            } \r\n            catch (e) {\r\n                console.log('No info was fetch check your internet connection');\r\n            }\r\n        }\r\n        handleSearch(url)\r\n    }, [url])\r\n\r\n    //verifica que el esttado de la lista de resultados sea correcto\r\n    const handleCloseSearchFilteredList = () => {\r\n        setSearchListState(false);\r\n    }\r\n\r\n    //barra de busqueda\r\n    const handleInputChange = (e) => {\r\n        setSearchAnime(e.target.value);\r\n        setSearchListState(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.table(posibleAnimes)\r\n    }, [posibleAnimes])\r\n\r\n        return ( \r\n        <div onClick={handleCloseSearchFilteredList}>\r\n            <DIV_SEARCH_CONTAINER >\r\n                <INPUT_SEARCH type=\"text\" placeholder=\"Search anime\" onChange={(e) => handleInputChange(e)}/>\r\n            </DIV_SEARCH_CONTAINER>\r\n            \r\n            {/* verifica si el estatus es true y si lo es renderiza los elementos */}\r\n            {searchListState && (\r\n                <DIV_SEARCH_LIST_CONTAINER>\r\n\r\n                    {posibleAnimes.length === 0 ?  '' : \r\n\r\n                        <DIV_SEARCH_LIST>\r\n                            {posibleAnimes.map(anime => {\r\n                          \r\n                                const animeShow = {\r\n                                    hasId : anime.id,\r\n                                    hasTitle : anime.attributes.canonicalTitle\r\n                                }\r\n                          \r\n                                return(\r\n                                    <div key={animeShow.hasId}>\r\n                                        <CardLink currentAnimeShows={currentAnimeShows}\r\n                                                  animeShowId={animeShow.hasId}>\r\n                                                      \r\n                                            <DIV_LIST>{animeShow.hasTitle}</DIV_LIST>\r\n                                        </CardLink>\r\n                                    </div>    \r\n                                )\r\n                            })}\r\n                        </DIV_SEARCH_LIST>\r\n\r\n                    }\r\n\r\n                </DIV_SEARCH_LIST_CONTAINER>\r\n            )}\r\n           \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { PrevButton, NextButton } from './micro-components/TotalButton';\nimport Navbar from \"./micro-components/Navbar\";\nimport SearchBar from './micro-components/SearchBar';\nimport styled from \"styled-components\";\nimport CardLink from './childrenComponents/CardLink';\n\nconst DIV_CARD_CONTAINER = styled.div`\n    width: 80%;\n    margin: 0 auto;\n    margin-top: 2rem;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    min-height: 60em;\n    font-family: 'Manrope', sans-serif;\n    @media (max-width: 618px) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    @media (max-width: 380px) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n`;\nconst DIV_CARD = styled.div`\n    margin: 0 auto;\n    width: 10rem;\n`;\nconst P_TITLE = styled.p`\n    color: #fff;\n    text-align: center;\n    font-size: 15px;\n`;\nconst IMG_PORTRAIT = styled.img`\n    display: block;\n    margin: 0 auto;\n`;\nconst DIV_PAGINATION_BAR = styled.div`\n    height: 2em;\n    display: flex;\n    align-items: center;   \n    justify-content: center; \n    margin-bottom: 10px;\n`;\nconst DIV_BUTTON_CONTAINER = styled.div`\n    width: 230px;\n    text-align: center;\n`;\nconst DIV_IMG_CONTAINER = styled.div`\n    margin: 0 auto;\n    height: 156px;\n    width: 110px;\n`;\n\nconst Home = () => {\n    //data cruda proveniente del fetch\n    const [animeData, setAnimeData] = useState([]);\n    //cantidad de objetos deseados de la lista de animes\n    const { currentAnimeShows } = useParams();\n    const url = `https://kitsu.io/api/edge/anime?page[limit]=12&page[offset]=${currentAnimeShows}`;\n    //limite de la cantidad de data por objeto \n    const ANIMESHOWLIMIT = 11;\n    //numero de objetos base\n    const startAnimeShow = parseInt(currentAnimeShows) || 0;\n\n    useEffect(() => {\n        const fetchingAnimeData = async () => {\n            const res = await  fetch( url );\n            const { data } = await res.json();\n            console.log( data );\n            setAnimeData( data );\n        }\n        fetchingAnimeData();\n    }, [url])\n\n    return(\n        <div>\n            <Navbar />    \n            <SearchBar />\n\n            <DIV_CARD_CONTAINER>\n                {animeData.map(data => {\n                    \n                    const animeShow = {\n                        hasId: data.id,\n                        hasTitle: data.attributes.canonicalTitle,\n                        hasImgTiny: data.attributes.posterImage.tiny\n                    }\n\n                    return (\n                        <DIV_CARD key={ animeShow.hasId }>\n                            {/* componente children que envuelve toda la tarjeta, su funcion es la de ser un link */}\n                            <CardLink currentAnimeShows={currentAnimeShows} animeShowId={animeShow.hasId}>\n                                <DIV_IMG_CONTAINER>\n                                    <IMG_PORTRAIT src={ animeShow.hasImgTiny } alt=\"\" />\n                                </DIV_IMG_CONTAINER>\n                                <P_TITLE>{ animeShow.hasTitle }</P_TITLE>   \n                            </CardLink>\n                        </DIV_CARD>\n                    )\n                })}\n            </DIV_CARD_CONTAINER>\n\n            <DIV_PAGINATION_BAR>\n                <DIV_BUTTON_CONTAINER>\n                    {/* renderizado condicional del botton previous cuando la data sea menor a 0*/}\n                    {startAnimeShow > ANIMESHOWLIMIT && <PrevButton currentAnimeShows={ currentAnimeShows }/>}\n                    <NextButton currentAnimeShows={ currentAnimeShows }/>\n                </DIV_BUTTON_CONTAINER>\n            </DIV_PAGINATION_BAR>        \n        </div>\n    )\n}\n\nexport default Home;\n","// import React, {useEffect, useState} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Navbar from \"./micro-components/Navbar\";\r\nimport SearchBar from \"./micro-components/SearchBar\";\r\nimport styled from \"styled-components\";\r\nimport { BackButton } from \"./micro-components/TotalButton\";\r\n\r\nconst DIV_MAIN_CONTAINER = styled.div`\r\n    display: flex;\r\n    width: 90%;\r\n    margin: 0 auto;\r\n    margin-top: 3rem;\r\n\r\n    @media (max-width: 1600px){\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\nconst DIV_PRESENTATION_CARD = styled.div`\r\n    width: 25%;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 1600px) {\r\n        width: 100%;\r\n        text-align: center;\r\n    }  \r\n`;\r\nconst DIV_SYNOPSIS_CONTAINER = styled.div`\r\n    color: #fff;\r\n    margin: 0 30px;\r\n    width: 75%;\r\n    min-height: 23rem;  \r\n    @media (max-width: 1600px) {\r\n        width: 100%;\r\n    }  \r\n`;\r\nconst PRE_SYNOPSIS = styled.pre`\r\n    white-space: pre-wrap;\r\n    white-space: -moz-pre-wrap;\r\n    white-space: -pre-wrap;\r\n    white-space: -o-pre-wrap;\r\n    word-wrap: break-word;\r\n    font-family: 'Manrope', sans-serif;\r\n    line-height: 1.5;\r\n`;\r\nconst P_TITLE_SYNOPSIS = styled.p`\r\n    font-size: 23px;\r\n    font-family: 'Manrope', sans-serif;\r\n    color: red;\r\n    font-weight: 500;\r\n`;\r\nconst P_INFO = styled.p`\r\n    padding-left: 4rem;\r\n    padding-right: 4rem;\r\n    font-family: 'Manrope', sans-serif;\r\n    font-size: 15px;\r\n    color: #fff;\r\n`;\r\nconst P_PRESENTATION_TITLE = styled.p`\r\n    font-size: 20px;\r\n    font-family: 'Manrope', sans-serif;\r\n    color: red;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n    margin-bottom: 1.3rem;\r\n    font-weight: 500;\r\n    text-align: center;\r\n`;\r\nconst DIV_BACK_BUTTON_HOLDER = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    margin-top: 0.5rem;\r\n`;\r\nconst DIV_IMG_CONTAINER = styled.div`\r\n    //width: 110px;\r\n    //height: 156px;\r\n    //margin: 0 auto;\r\n`;\r\nconst IMG = styled.img`\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-top: -2rem;\r\n`;\r\n\r\n\r\nconst DetailView = () => {\r\n    //cantidad de objetos deseados de la lista de animes\r\n    const {currentAnimeShows} = useParams();\r\n    //id especifico de la serie de anime\r\n    const {animeShowId} = useParams();\r\n    //data final, pero sin depurar en un nuevo objeto\r\n    const [detailData, setDetailData] = useState();\r\n    const url = `https://kitsu.io/api/edge/anime/${animeShowId}`;\r\n    //data final, depurada para mejor lectura\r\n    const finalData = {\r\n        hasTitle: \"\" || 'Loading',\r\n        hasImgSmall: \"\" || 'Loading',\r\n        hasSynopsis: \"\" || 'Loading',\r\n        hasStartDate: \"\" || 'No data',\r\n        hasFinished: \"\" || 'No data',\r\n        hasEpisodeCount: \"\" || 'No data',\r\n        hasStatus: \"\" || 'No data',\r\n        hasEpisodeLength: \"\" || 'No data',\r\n        hasNsfwContent: \"\" || 'No data',\r\n        hasPopularityRank: \"\" || 'No data',\r\n\r\n    };\r\n    //data depurada que se utiliza en la vista del cliente \r\n    const [animeShow, setAnimeShow] = useState(finalData);\r\n\r\n    useEffect(() => {\r\n        const fetchingAnimeData = async (animeUrl) => {\r\n            try {\r\n                const res = await  fetch(animeUrl);\r\n                const {data} = await res.json();\r\n                setDetailData(data);\r\n            } \r\n            catch (error) {\r\n                console.log('No info was fetch check your internet connection');\r\n            }\r\n        }\r\n        fetchingAnimeData(url);\r\n    }, [url])\r\n\r\n    \r\n    useEffect(() => {\r\n        const HandleViewData = (data) => {\r\n            if (data) {\r\n                try {\r\n                    setAnimeShow({\r\n                        hasTitle: detailData.attributes.canonicalTitle,\r\n                        hasImgSmall: detailData.attributes.posterImage.small,\r\n                        hasSynopsis: detailData.attributes.description,\r\n                        hasStartDate: detailData.attributes.startDate,\r\n                        hasFinished: detailData.attributes.endDate,\r\n                        hasEpisodeCount: detailData.attributes.episodeCount,\r\n                        hasStatus: detailData.attributes.status,\r\n                        hasEpisodeLength: detailData.attributes.episodeLength,\r\n                        hasNsfwContent: detailData.attributes.nsfw,\r\n                        hasPopularityRank: detailData.attributes.popularityRank\r\n                    })\r\n\r\n                } catch (e) {\r\n                    console.log('Currently undefined data loading will take some seconds');\r\n                }  \r\n            }\r\n        }    \r\n        HandleViewData(detailData)\r\n    }, [detailData])\r\n    \r\n    \r\n    console.log(detailData)\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <SearchBar />\r\n\r\n            <DIV_MAIN_CONTAINER>\r\n                <DIV_PRESENTATION_CARD>\r\n                    {animeShow.hasImg === null ? '' : <DIV_IMG_CONTAINER><IMG src={animeShow.hasImgSmall} alt=\"\" /></DIV_IMG_CONTAINER>}\r\n                    {animeShow.hasTitle === null ? '' : <P_PRESENTATION_TITLE>{animeShow.hasTitle}</P_PRESENTATION_TITLE>}\r\n                    {animeShow.hasStatus === null ? '' : <P_INFO>Status: {animeShow.hasStatus}</P_INFO>}\r\n\r\n                    {animeShow.hasEpisodeCount === null ? '' : <P_INFO>Episode count: {animeShow.hasEpisodeCount}</P_INFO>}\r\n                    {animeShow.hasPopularityRank === null ? '' : <P_INFO>Popularity rank {animeShow.hasPopularityRank}</P_INFO>}\r\n\r\n                    {animeShow.hasEpisodeLength === null ? '' : <P_INFO>Episode length: {animeShow.hasEpisodeLength} min</P_INFO>}\r\n                    {animeShow.hasStartDate === null ? '' : <P_INFO>Start date: {animeShow.hasStartDate}</P_INFO>}\r\n                    {animeShow.hasFinished === null ? '' : <P_INFO>Ended at: {animeShow.hasFinished}</P_INFO>}\r\n                </DIV_PRESENTATION_CARD>\r\n\r\n                <DIV_SYNOPSIS_CONTAINER>\r\n                    {!detailData ? (<p>LOADING...</p>) : (\r\n                        <div>\r\n                            <P_TITLE_SYNOPSIS>Synopsis:</P_TITLE_SYNOPSIS>\r\n                            {animeShow.hasSynopsis === null ? '' : <PRE_SYNOPSIS>{animeShow.hasSynopsis}</PRE_SYNOPSIS>}\r\n                        </div>\r\n                    )}\r\n                </DIV_SYNOPSIS_CONTAINER>   \r\n            </DIV_MAIN_CONTAINER>\r\n\r\n            <DIV_BACK_BUTTON_HOLDER>\r\n                <BackButton currentAnimeShows={currentAnimeShows}/>\r\n            </DIV_BACK_BUTTON_HOLDER>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailView;","import React, { Fragment } from 'react'\r\nimport styled from 'styled-components';\r\nimport Navbar from './micro-components/Navbar';\r\n\r\nconst DIV_ERROR_CONTAINER = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    height: calc(100vh - 3em);\r\n    align-items: center;\r\n`;\r\nconst H1_ERROR_TITLE = styled.h1`\r\n    color: #fff;\r\n`;\r\nexport const Error404 = () => {\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            <DIV_ERROR_CONTAINER>\r\n            <div>\r\n                <H1_ERROR_TITLE>\r\n                    Error 404\r\n                </H1_ERROR_TITLE>\r\n            </div>\r\n        </DIV_ERROR_CONTAINER>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport DetailView from \"./DetailView\";\r\nimport {\r\n        BrowserRouter as Router,\r\n        Switch,\r\n        Route\r\n      } from \"react-router-dom\";\r\nimport { Error404 } from \"./Error404\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/AnimeInfo/\" component={Home} />\r\n                    <Route exact path=\"/AnimeInfo/:currentAnimeShows\" component={Home} />\r\n                    <Route exact path=\"/AnimeInfo/:currentAnimeShows/details/:animeShowId\" component={DetailView} />\r\n                    <Route path=\"*\" component={Error404} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\nexport default Routes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './components/Routes';\nimport './normalize.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}